openapi: 3.0.0
info:
  title: API de gestion des dettes
  description: Documentation de l'API pour la gestion des dettes, clients, utilisateurs, et autres entités
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1
    description: Serveur local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
        pseudoname:
          type: string
        telephone:
          type: string
        adresse:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        login:
          type: string
        password:
          type: string
        role:
          type: string
        photo:
          type: string
          format: binary
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Article:
      type: object
      properties:
        id:
          type: integer
        libelle:
          type: string
        prix:
          type: number
          format: float
        quantite_stock:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Dette:
      type: object
      properties:
        id:
          type: integer
        client_id:
          type: integer
        montant:
          type: number
          format: float
        date_echeance:
          type: string
          format: date
        statut:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: integer
        client_id:
          type: integer
        message:
          type: string
        lu:
          type: boolean
        created_at:
          type: string
          format: date-time

    Demande:
      type: object
      properties:
        id:
          type: integer
        client_id:
          type: integer
        description:
          type: string
        statut:
          type: string
        created_at:
          type: string
          format: date-time

security:
  - bearerAuth: []

paths:
  /clients:
    get:
      tags:
        - Clients
      summary: Récupérer tous les clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des clients récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      tags:
        - Clients
      summary: Créer un nouveau client
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Client créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'

  /clients/{id}:
    get:
      tags:
        - Clients
      summary: Récupérer un client par ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Détails du client récupérés avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    put:
      tags:
        - Clients
      summary: Mettre à jour un client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    patch:
      tags:
        - Clients
      summary: Mettre à jour partiellement un client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client mis à jour partiellement avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    delete:
      tags:
        - Clients
      summary: Supprimer un client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '204':
          description: Client supprimé avec succès

  /clients/{id}/user:
    get:
      tags:
        - Clients
      summary: Récupérer un client avec les informations utilisateur
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Détails du client avec utilisateur récupérés avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    $ref: '#/components/schemas/Client'
                  user:
                    $ref: '#/components/schemas/User'

  /clients/telephone:
    post:
      tags:
        - Clients
      summary: Rechercher un client par téléphone
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                telephone:
                  type: string
      responses:
        '200':
          description: Client trouvé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'

  /clients/{id}/dettes:
    get:
      tags:
        - Clients
        - Dettes
      summary: Récupérer les dettes d'un client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Dettes du client récupérées avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dette'

  /users:
    get:
      tags:
        - Utilisateurs
      summary: Récupérer tous les utilisateurs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des utilisateurs récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Utilisateurs
      summary: Créer un nouvel utilisateur
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/login:
    post:
      tags:
        - Authentification
      summary: Connexion utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connexion réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /users/register:
    post:
      tags:
        - Authentification
      summary: Enregistrement d'un nouvel utilisateur
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Utilisateur enregistré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user:
    get:
      tags:
        - Authentification
      summary: Récupérer les informations de l'utilisateur connecté
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Informations de l'utilisateur récupérées avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /logout:
    post:
      tags:
        - Authentification
      summary: Déconnexion de l'utilisateur
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Déconnexion réussie

  /articles:
    get:
      tags:
        - Articles
      summary: Récupérer tous les articles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des articles récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'

  /articles/stock:
    post:
      tags:
        - Articles
      summary: Mettre à jour le stock d'un article
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '200':
          description: Stock de l'article mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /articles/{id}:
    get:
      tags:
        - Articles
      summary: Récupérer un article par ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de l'article
      responses:
        '200':
          description: Détails de l'article récupérés avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      tags:
        - Articles
      summary: Supprimer un article
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de l'article
      responses:
        '204':
          description: Article supprimé avec succès

  /articles/{id}/update-stock:
    put:
      tags:
        - Articles
      summary: Mettre à jour le stock d'un article spécifique
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de l'article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantite_stock:
                  type: integer
      responses:
        '200':
          description: Stock de l'article mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /articles/search:
    post:
      tags:
        - Articles
      summary: Rechercher un article par libellé
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
      responses:
        '200':
          description: Article trouvé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /dettes:
    get:
      tags:
        - Dettes
      summary: Récupérer toutes les dettes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des dettes récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dette'
    post:
      tags:
        - Dettes
      summary: Créer une nouvelle dette
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dette'
      responses:
        '201':
          description: Dette créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'

  /dettes/archive:
    get:
      tags:
        - Dettes
      summary: Récupérer les dettes archivées
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des dettes archivées récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dette'

  /dettes/{id}:
    get:
      tags:
        - Dettes
      summary: Récupérer une dette par ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      responses:
        '200':
          description: Détails de la dette récupérés avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'
    put:
      tags:
        - Dettes
      summary: Mettre à jour une dette
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dette'
      responses:
        '200':
          description: Dette mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'
    patch:
      tags:
        - Dettes
      summary: Mettre à jour partiellement une dette
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dette'
      responses:
        '200':
          description: Dette mise à jour partiellement avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'
    delete:
      tags:
        - Dettes
      summary: Supprimer une dette
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      responses:
        '204':
          description: Dette supprimée avec succès

  /dettes/{id}/articles:
    post:
      tags:
        - Dettes
        - Articles
      summary: Associer des articles à une dette
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                articles:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Articles associés à la dette
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'

  /dettes/{id}/paiements:
    post:
      tags:
        - Dettes
        - Paiements
      summary: Ajouter des paiements à une dette
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                montant:
                  type: number
                  format: float
      responses:
        '201':
          description: Paiement ajouté à la dette
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'

  /notification/client/{id}:
    get:
      tags:
        - Notifications
      summary: Envoyer un rappel au client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Notification envoyée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'

  /notification/client/all:
    post:
      tags:
        - Notifications
      summary: Envoyer des rappels à tous les clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notifications envoyées avec succès

  /notification/client/message:
    post:
      tags:
        - Notifications
      summary: Envoyer des rappels à une liste de clients sélectionnés
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clients:
                  type: array
                  items:
                    type: integer
                message:
                  type: string
      responses:
        '200':
          description: Notifications envoyées

  /client/{id}/notification/unread:
    get:
      tags:
        - Notifications
      summary: Obtenir les notifications non lues du client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Liste des notifications non lues récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

  /client/{id}/notification/read:
    get:
      tags:
        - Notifications
      summary: Obtenir les notifications lues du client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Liste des notifications lues récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

  /demandes/{id}/relance:
    post:
      tags:
        - Demandes
      summary: Relancer une demande
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la demande
      responses:
        '200':
          description: Demande relancée avec succès

  /demandes/{id}/traiter:
    post:
      tags:
        - Demandes
      summary: Traiter une demande
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la demande
      responses:
        '200':
          description: Demande traitée avec succès

  /demandes:
    post:
      tags:
        - Demandes
      summary: Créer une nouvelle demande
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Demande'
      responses:
        '201':
          description: Demande créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demande'

  /demandesList:
    get:
      tags:
        - Demandes
      summary: Lister toutes les demandes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des demandes récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Demande'

  /archive/clients/{clientId}/dettes:
    get:
      tags:
        - Archives
      summary: Obtenir les dettes archivées d'un client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Dettes archivées du client récupérées avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dette'

  /archive/dettes/{id}:
    get:
      tags:
        - Archives
      summary: Obtenir une dette archivée par ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      responses:
        '200':
          description: Dette archivée récupérée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dette'

  /restaure/{date}:
    get:
      tags:
        - Restauration
      summary: Restaurer les dettes par date
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: date
          required: true
          schema:
            type: string
            format: date
          description: Date des dettes à restaurer
      responses:
        '200':
          description: Dettes restaurées avec succès

  /restaure/dettes/{id}:
    get:
      tags:
        - Restauration
      summary: Restaurer une dette spécifique
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la dette
      responses:
        '200':
          description: Dette restaurée avec succès

  /restaure/client/{clientId}:
    get:
      tags:
        - Restauration
      summary: Restaurer les dettes d'un client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: integer
          description: ID du client
      responses:
        '200':
          description: Dettes du client restaurées avec succès

  /{id}/teste:
    post:
      tags:
        - Test
      summary: Ajouter un paiement (test)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID pour le test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                montant:
                  type: number
      responses:
        '200':
          description: Paiement ajouté (test)
